##### GENERAL CONFIGURATIONS
# location of elasticsearch
elasticsearchLoc=/Users/Chaiyong/IdeasProjects/Siamese/elasticsearch-2.2.0
# elasticsearch's server name (or IP)
server=localhost
# index name
index=cloplag
# type name
type=isics

### For BCB data set
#inputFolder=/Users/Chaiyong/Downloads/isics_query
# only for GitHub indexing
subInputFolder=
# output folder to store the search results
outputFolder=exp_results
# normalisation.
# It can be a combination of x (none), w (words), d (datatypes),
# j (Java classes), p (Java packages), k (keywords), v (values),
# s (strings), e (escape). For example: wkvs
normMode=djkpsvw
# turn on ngram
isNgram=true
# size of n in ngram [default = 4]
ngramSize=4
# use DFS mode [default=no]
dfs=true
writeToFile=true
# source code file extension
extension=java
# minimum clone size (lines)
minCloneSize=1
# command to execute [index,search]
command=search
# print out logging data
isPrint=false
# output format [csv = filename, csvfline = filename#start#end)]
outputFormat=csv
# indexing mode [sequential, bulk]
indexingMode=bulk
# size of bulk insert
bulkSize=4000

##### LANGUAGE SETTINGS
methodParser=crest.siamese.helpers.JavaMethodParser
tokenizer=crest.siamese.helpers.JavaTokenizer
normalizer=crest.siamese.helpers.JavaNormalizer

##### QUERY CONFIGURATIONS
resultOffset=0
resultsSize=10
totalDocuments=100
recreateIndexIfExists=true
printEvery=10000
# tfidf, bm25, dfr, ib, lmd (LM Dirichlet), lmj (LM Jelinek-Mercer)
rankingFunction=tfidf

deleteIndexAfterUse=true

##### EXPERIMENT CONFIGURATIONS
#inputFolder=/Users/Chaiyong/Documents/phd/2016/cloplag/tests_andrea
#inputFolder=/Users/Chaiyong/Documents/phd/2016/cloplag/tests
inputFolder=/Users/Chaiyong/Documents/phd/2016/cloplag/soco_f/formatted/
parseMode=file
#parseMode=method
#similarityMode=tfidf_text
similarityMode=tfidf_text_def
#cloneClusterFile=cloplag
cloneClusterFile=soco
#errorMeasure=arp
errorMeasure=map
#multirep=false
multirep=true
#queryReduction=false
queryReduction=true
QRPercentileNorm=5
QRPercentileOrig=10
normBoost=10
origBoost=1
# good one Norm 10, Orig 30, BoostN 10 BoostO 1

##### LICENSE EXTRACTION
# extract license [true, false]
license=false
# license extractor [ninka, regexp]
licenseExtractor=regexp